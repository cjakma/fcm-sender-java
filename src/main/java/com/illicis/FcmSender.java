package com.illicis;

import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;

import com.illicis.exception.ValidationException;
import com.illicis.model.DownstreamHttpMessages;
import com.illicis.model.DownstreamHttpResponse;
import com.illicis.util.CollectionUtil;
import com.illicis.util.ObjectMapperImpl;

/*
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'jason' at '12/23/16 12:56 AM' with Gradle 3.1
 *
 * @author jason, @date 12/23/16 12:56 AM
 */
public class FcmSender {

  private final String fcmServerUrl = "https://fcm.googleapis.com/fcm/send";
  private final String authKey;

  public FcmSender(String authKey) {
    this.authKey = authKey;
  }

  public DownstreamHttpResponse sendNotification(DownstreamHttpMessages downstreamHttpMessages)
      throws Exception {
    // Validation.
    this.validToDownstreamHttpMessages(downstreamHttpMessages);

    Unirest.setObjectMapper(new ObjectMapperImpl());
    HttpResponse<DownstreamHttpResponse> response =
        Unirest.post(fcmServerUrl)
            .header("Content-Type", "application/json")
            .header("Authorization", authKey)
            .body(downstreamHttpMessages)
            .asObject(DownstreamHttpResponse.class);
    return response.getBody();
  }

  private void validToDownstreamHttpMessages(DownstreamHttpMessages downstreamHttpMessages) {
    if (downstreamHttpMessages == null) {
      throw new ValidationException("DownstreamHttpMessages can not be null!");
    }

    if (downstreamHttpMessages.getTo() == null
        && CollectionUtil.isNullOrEmpty(downstreamHttpMessages.getRegistrationIds())) {
      throw new ValidationException("Must be either to or registration id!");
    }
  }
}
